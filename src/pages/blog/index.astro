---
import classNames from 'classnames'
import Layout from '../../layouts/Layout.astro'
import Blog from '../../components/Blog'
import type { BlogProps, Person } from '../../components/Blog'

export const metadata = { navbar: { weight: 3 } }

const pages = await Astro.glob<BlogProps>('./*.md')
const people = await Astro.glob<Person & { default: Person }>(
  '../../data/people/*.json'
)

const global = await Astro.glob<{ host: string }>('../../data/global.json')
const { host } = global[0]

const peopleByThreeLetterCode = people.reduce((acc, person) => {
  const code = person.code
  acc[code] = person.default
  return acc
}, {})

const isDev = import.meta.env.DEV

const blogs = pages.map((page) => {
  const author = page.frontmatter.author
  const person = peopleByThreeLetterCode[author]
  if (!person)
    throw new Error(`No person found for author: '${author}' in '${page.url}'`)

  return {
    ...page.frontmatter,
    href: page.url,
    person: peopleByThreeLetterCode[page.frontmatter.author]
  }
})
---

<Layout navbar={true} />
<Blog client:load blogs={blogs} isDev={isDev} host={host} />
