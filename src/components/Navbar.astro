---
import { removeLeadingSlash } from '../utils'
import Navbar from './Navbar'

export type PageProps = {
  metadata?: {
    dev?: boolean
    navbar?: { weight?: number; label?: string; url?: string }
    footer?: { weight?: number; label?: string; url?: string; flag?: string }
  }
  url: string
}

export interface Props {
  pages: PageProps[]
  navbarNoBg: boolean
}

const { pages, navbarNoBg } = Astro.props as Props

const url = new URL(Astro.request.url)
const currentPage = url.pathname
const isDev = import.meta.env.DEV

const pagesInNavbar = pages
  .filter((page) => page?.metadata?.navbar && (isDev || !page.metadata.dev))
  .map((page) => ({
    url: page.metadata?.navbar?.url || page.url,
    weight: page.metadata?.navbar?.weight,
    label: page.metadata?.navbar?.label || removeLeadingSlash(page.url),
    active: (page.metadata?.navbar?.url || page.url) === currentPage
  }))
  .sort((a, b) => a.weight - b.weight)

const isBlog = Astro.url.pathname.includes('/blog')
---

<Navbar
  client:visible
  navLinks={pagesInNavbar}
  isBlog={isBlog}
  navbarNoBg={navbarNoBg}
/>
