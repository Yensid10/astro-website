---
import type { Person } from '../components/Blog'
import { LinkedInIcon, RedditIcon, TwitterIcon } from '../components/Icons'
import Layout from './Layout.astro'

export interface Props {
  content: {
    title: string
    description: string
    category: string
    publishDate: string
    author: string
    heroImage?: {
      src: string
      alt: string
    }
  }
}

const {
  content: { title, description, heroImage, category, author }
} = Astro.props as Props

const people = await Astro.glob<Person & { default: Person }>(
  '../data/people/*.json'
)

const { name, lastName, jobTitle, image } = people.find(
  (person) => person.default.code === author
).default

const blogHref = Astro.url.href
const shareIconStyle =
  'fill-zinc-800 dark:fill-zinc-300 hover:fill-juxt dark:hover:fill-juxt transition-colors'
---

<Layout navbar>
  <main class='transition-colors'>
    <div class='px-4 sm:px-12 2xl:px-0 max-w-6xl mx-auto'>
      <div class='flex flex-col lg:flex-row gap-12 items-center pt-10'>
        <div
          class='flex text-center max-w-xl mx-auto lg:text-left lg:max-w-none lg:w-1/2 lg:mx-0 flex-col lg:justify-center items-center lg:items-start'
        >
          <div
            class='text-sm font-extrabold uppercase pb-1 text-zinc-500 dark:text-zinc-200'
          >
            {category}
          </div>
          <h1
            class='text-black text-4xl dark:text-white font-semibold leading-tight pb-4'
          >
            {title}
          </h1>
          <h2 class='text-lg text-zinc-400 dark:text-zinc-300'>
            {description}
          </h2>

          <a
            href='/to/some/profile'
            class='group flex gap-4 w-fit items-center pt-12'
          >
            <div class='flex-shrink-0 flex flex-col gap-3'>
              <div class='w-24 h-24 rounded relative overflow-hidden'>
                <img
                  class='absolute w-full h-full object-cover'
                  src={`/images/people/${image}`}
                  alt='author'
                />
              </div>
            </div>
            <div class='flex flex-col gap-1 text-left'>
              <div
                class='text-lg font-bold group-hover:underline dark:text-zinc-100 underline-offset-2'
              >
                <div>{`${name} ${lastName}`}</div>
              </div>
              <div class='text-zinc-700 leading-snug w-36 dark:text-zinc-300'>
                {jobTitle}
              </div>
            </div>
          </a>
        </div>
        <img
          class='w-full max-w-3xl lg:max-w-none lg:w-1/2 object-cover'
          src={heroImage.src}
          alt=''
        />
      </div>

      <div
        class='pb-20 pt-6 flex justify-center items-center gap-4 lg:justify-end'
      >
        <div class='flex justify-around text-sm items-center'>
          <a
            class='w-6 h-6'
            target='_blank'
            href={`https://twitter.com/intent/tweet?url=${blogHref}&title=${title}`}
          >
            {(<TwitterIcon className={shareIconStyle} />)}
          </a>
        </div>
        <div class='flex justify-around text-sm items-center'>
          <a
            class='w-6 h-6'
            target='_blank'
            href={`https://www.reddit.com/submit?url=${blogHref}&title=${title}`}
          >
            {(<RedditIcon className={shareIconStyle} />)}
          </a>
        </div>
        <div class='flex justify-around text-sm items-center'>
          <a
            class='w-6 h-6'
            target='_blank'
            href={`https://www.linkedin.com/sharing/share-offsite/?url=${blogHref}&title=${title}`}
          >
            {(<LinkedInIcon className={shareIconStyle} />)}
          </a>
        </div>
      </div>
    </div>

    <article
      class='px-4 lg:px-0 mx-auto prose prose-a:text-juxt hover:prose-a:text-black prose-a:transition-colors dark:prose-invert'
    >
      <slot />
    </article>
  </main>
  <script>
    function css(element, style) {
      for (const property in style) element.style[property] = style[property]
    }

    const preElements = [...document.getElementsByTagName('pre')]

    preElements.forEach((pre) => {
      pre.style.position = 'relative'
      pre.style.paddingTop = '2rem'
      const copyButton = document.createElement('button')

      css(copyButton, {
        position: 'absolute',
        top: '0',
        right: '0',
        background: 'none',
        border: 'none',
        padding: '.4rem',
        cursor: 'pointer',
        outline: 'none'
      })

      const svg =
        '<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 stroke-juxt" fill="none" viewBox="0 0 24 24" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3"/></svg>'

      copyButton.innerHTML = svg
      copyButton.className = 'copy-button'
      copyButton.addEventListener('click', () => {
        navigator.clipboard.writeText(pre.innerText)
      })
      pre.appendChild(copyButton)
    })
  </script>
</Layout>
